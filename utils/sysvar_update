#!/usr/bin/python3
import sys
import subprocess
import os

PATH_TUPLE = sys.argv[0].rpartition("/")

if len(sys.argv) == 1:
    print("""\

**********************************
Util for system variable updating.
**********************************
  Use with follow format:
    {} <server_addr> <server_user> <server_pass> <var_name> <var_val>
  where
    server_addr - remote server address
    server_user - remote server user
    server_pass - remote server password
    var_name    - system variable name
    var_val     - system variable value
""".format(PATH_TUPLE[2]))
    exit(0)

SYS_VAR_FILE = "/etc/environment"
TMP_VAR_FILE = "{}{}TMP_VAR_FILE".format(PATH_TUPLE[0], PATH_TUPLE[1])

server_addr = sys.argv[1]
server_usr = sys.argv[2]
server_pass = sys.argv[3]

sysvar_name = sys.argv[4]
sysvar_value = sys.argv[5]

print("Try to install system variable '{}' with value: {}".format(sysvar_name, sysvar_value))
print("System variable file: {}".format(SYS_VAR_FILE))

try:
    print("Download system variable file from remote machine.")
    result = subprocess.call(["sshpass", "-p", server_pass, 
        "scp", "{user}@{addr}:{path}".format(user=server_usr, addr=server_addr, path=SYS_VAR_FILE), 
        TMP_VAR_FILE])
    if result != 0:
        raise OSError("Fail to download file from remote machine")
    print("Update system variable file.")
    with open(TMP_VAR_FILE, 'a') as f:
        f.write("\n{name}={value}".format(name=sysvar_name, value=sysvar_value))
    print("Transfer system variable file to remote machine.")
    result = subprocess.call(["sshpass", "-p", server_pass,
        "scp", TMP_VAR_FILE, 
        "{user}@{addr}:{path}".format(user=server_usr, addr=server_addr, path=SYS_VAR_FILE)])
    if result != 0:
        raise OSError("Fail to transfer file to remote machine")
    print("Delete temporary file.")
    os.unlink(TMP_VAR_FILE)
except OSError as err:
    print("OS Error: {}".format(err))
    print("Fail to install system variable.")
    exit(1)

print("Variable installation success.")
exit(0)
